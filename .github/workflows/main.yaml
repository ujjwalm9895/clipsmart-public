name: clipsmart-be-main
on:
  push:
    branches:
      - master 
jobs:
  ci-cd:
    runs-on: [ClipSmart-ujjwal]
    steps:
      - name: Code Checkout
        uses: actions/checkout@v3
    
      - name: Server Update
        run: sudo apt update
        
      - name: Docker Compose build
        run: docker compose build
        
      - name: Composing Down & Up
        run: |
          docker compose down 
          docker compose up -d
        env: 
          MONGODB_URL: ${{ secrets.MONGODB_URL }}
          AUTH_CLIENT_ID: ${{ secrets.AUTH_CLIENT_ID }}
          CLIENT_PROJECT_ID: ${{ secrets.CLIENT_PROJECT_ID }}
          AUTH_URI: ${{ secrets.AUTH_URI }}
          TOKEN_URI: ${{ secrets.TOKEN_URI }}
          AUTH_PROVIDER_X509_CERT_URL: ${{ secrets.AUTH_PROVIDER_X509_CERT_URL }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          JAVASCRIPT_ORIGINS: ${{ secrets.JAVASCRIPT_ORIGINS }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
          WEBSHARE_USERNAME: ${{ secrets.WEBSHARE_USERNAME }}
          WEBSHARE_PASSWORD: ${{ secrets.WEBSHARE_PASSWORD }}
          PORT: ${{ secrets.PORT }}
          FLASK_ENV: ${{ secrets.FLASK_ENV }}
          FLASK_PORT: ${{ secrets.FLASK_PORT }}
          FLASK_HOST: ${{ secrets.FLASK_HOST }}
          PROXY_USERNAME: ${{ secrets.PROXY_USERNAME }}
          PROXY_PASSWORD: ${{ secrets.PROXY_PASSWORD }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          
      - name: Server Clean UP !
        run: docker system prune -f